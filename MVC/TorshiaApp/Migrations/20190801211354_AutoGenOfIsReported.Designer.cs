// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TorshiaApp.Data;

namespace TorshiaApp.Migrations
{
    [DbContext(typeof(TorshiaContext))]
    [Migration("20190801211354_AutoGenOfIsReported")]
    partial class AutoGenOfIsReported
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TorshiaApp.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("TorshiaApp.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ReportedOn");

                    b.Property<int>("Status");

                    b.Property<int>("TaskId");

                    b.Property<int>("reporterId");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("reporterId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("TorshiaApp.Models.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Customers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finances"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Internal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Management"
                        });
                });

            modelBuilder.Entity("TorshiaApp.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime?>("DueDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TorshiaApp.Models.TaskParticipant", b =>
                {
                    b.Property<int>("TaskId");

                    b.Property<int>("ParticipantId");

                    b.HasKey("TaskId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("TasksParticipants");
                });

            modelBuilder.Entity("TorshiaApp.Models.TaskSector", b =>
                {
                    b.Property<int>("TaskId");

                    b.Property<int>("SectorId");

                    b.HasKey("TaskId", "SectorId");

                    b.HasIndex("SectorId");

                    b.ToTable("taskSectors");
                });

            modelBuilder.Entity("TorshiaApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TorshiaApp.Models.Report", b =>
                {
                    b.HasOne("TorshiaApp.Models.Task", "Task")
                        .WithMany("Reports")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TorshiaApp.Models.User", "Reporter")
                        .WithMany("Reports")
                        .HasForeignKey("reporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TorshiaApp.Models.TaskParticipant", b =>
                {
                    b.HasOne("TorshiaApp.Models.Participant", "Participant")
                        .WithMany("ParticipantTasks")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TorshiaApp.Models.Task", "Task")
                        .WithMany("TaskParticipants")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TorshiaApp.Models.TaskSector", b =>
                {
                    b.HasOne("TorshiaApp.Models.Sector", "Sector")
                        .WithMany("SectorTasks")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TorshiaApp.Models.Task", "Task")
                        .WithMany("AffectedSectors")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
